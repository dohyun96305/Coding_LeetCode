# Write your MySQL query statement below

# REPORT TOTAL SALES AMOUNT OF EACH ITEM OF EACH YEAR
# ORDER BY PRODUCT_ID, REPORT_YEAR

WITH RECURSIVE TEMP AS (
    SELECT PRODUCT_ID, YEAR(PERIOD_START) AS REPORT_YEAR
    FROM SALES 

    UNION 

    SELECT PRODUCT_ID, REPORT_YEAR + 1 AS REPORT_YEAR
    FROM TEMP 
    WHERE REPORT_YEAR < (SELECT YEAR(PERIOD_END) FROM SALES WHERE TEMP.PRODUCT_ID = SALES.PRODUCT_ID))

SELECT A.PRODUCT_ID, B.PRODUCT_NAME, CAST(A.REPORT_YEAR AS CHAR) AS REPORT_YEAR, 
    CASE 
        WHEN A.REPORT_YEAR > YEAR(C.PERIOD_START) AND A.REPORT_YEAR < YEAR(C.PERIOD_END) THEN 
            365 * C.AVERAGE_DAILY_SALES
        WHEN A.REPORT_YEAR = YEAR(C.PERIOD_START) AND A.REPORT_YEAR = YEAR(C.PERIOD_END) THEN 
            (1 + DATEDIFF(C.PERIOD_END, C.PERIOD_START)) * C.AVERAGE_DAILY_SALES 
        WHEN A.REPORT_YEAR = YEAR(C.PERIOD_START) AND A.REPORT_YEAR < YEAR(C.PERIOD_END) THEN 
            (1+DATEDIFF(DATE(CONCAT(A.REPORT_YEAR, '-12-31')), C.PERIOD_START)) * C.AVERAGE_DAILY_SALES 
        WHEN A.REPORT_YEAR = YEAR(C.PERIOD_END) AND A.REPORT_YEAR > YEAR(C.PERIOD_START) THEN 
            (1+DATEDIFF(C.PERIOD_END, DATE(CONCAT(A.REPORT_YEAR, '-01-01')))) * C.AVERAGE_DAILY_SALES 
    END AS TOTAL_AMOUNT
FROM TEMP AS A
JOIN PRODUCT AS B ON A.PRODUCT_ID = B.PRODUCT_ID
JOIN SALES AS C ON A.PRODUCT_ID = C.PRODUCT_ID
ORDER BY A.PRODUCT_ID, A.REPORT_YEAR

# 3가지 경우 
# 시작점 ~ REPORT YEAR => REPORT YEAR = 시작점 YEAR
# REPORT YEAR ~ 끝 점 
# REPORT YEAR 쭉 